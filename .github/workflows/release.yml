name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  unit-test:
    name: Unit Tests

    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.x
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run unit tests
        run: ./gradlew clean notes-manager-web:test

  acceptance-test:
    name: Acceptance Tests

    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.x
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run acceptance tests
        run: ./gradlew clean notes-manager-acceptance-tests:test

  create-release:
    name: Create release
    needs: [unit-test, acceptance-test]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Extract release content
        uses: yashanand1910/standard-release-notes@v1.2.1
        id: extract_release_notes
        with:
          changelog_path: ./CHANGELOG.md
          version: ${{ github.event.ref }}
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.ref }}
          release_name: ${{ github.event.ref }}
          body: ${{ steps.extract_release_notes.outputs.release_notes }}
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-upload:
    name: Upload image to GHCR
    needs: [create-release]

    runs-on: ubuntu-latest

    steps:
      - name: Configure image labels & tags
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: ghcr.io/${{ env.OWNER }}/${{ env.REPO }}
        env:
          OWNER: ${{ github.event.repository.owner.name }}
          REPO: ${{ github.event.repository.name }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push images
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
