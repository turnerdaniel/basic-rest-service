
name: Gradle CD

on:
  push:
    branches: [ main ]

jobs:
  unit-test:
    name: Unit Tests

    runs-on: ubuntu-latest

    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.x
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./build/reports/jacoco/coverage.xml
          flags: unittests

  build:
    name: Create Artefact
    needs: unit-test

    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.set-version.outputs.project-version }}

    steps:
      - name: Checkout project
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.x
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build artefact
        run: ./gradlew bootJar
      - name: Set project version as job output
        id: set-version
        run: |
          VER=`./gradlew -q version`
          echo "::set-output name=project-version::$VER"
      - name: Upload artefact
        uses: actions/upload-artifact@v2
        with:
          name: rest-api
          path: build/libs/rest-api-*.jar
          if-no-files-found: error

  deploy:
    name: Deployment
    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Download artefact
        uses: actions/download-artifact@v2
        with:
          name: rest-api
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ needs.build.outputs.version }}
          release_name: ${{ needs.build.outputs.version }}
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./rest-api-${{ needs.build.outputs.version }}.jar
          asset_name: rest-api-${{ needs.build.outputs.version }}.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
